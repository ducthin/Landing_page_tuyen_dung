# Production configuration
spring.application.name=WELL CENTER Recruitment

# Database configuration (Docker MySQL)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://mysql:3306/recruitment_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=Asia/Ho_Chi_Minh&allowPublicKeyRetrieval=true}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${DB_USERNAME:recruitment_user}
spring.datasource.password=${DB_PASSWORD:your_strong_password}

# JPA configuration for production
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# File upload configuration
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
spring.servlet.multipart.enabled=true

# Storage configuration
app.storage.type=DATABASE

# Server configuration
server.port=${SERVER_PORT:8080}
server.address=0.0.0.0

# Thymeleaf configuration for production
spring.thymeleaf.cache=true

# MySQL connection pool configuration for production
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Logging configuration
logging.level.com.recruitment=INFO
logging.level.root=WARN
logging.file.name=/var/log/recruitment-app.log

# Security
server.error.include-message=never
server.error.include-binding-errors=never
